name: Test

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install

      - name: Run Linting
        run: |
          poetry run black --check .
          poetry run isort --check .
          poetry run flake8 .
          poetry run mypy .

  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install

      - name: Run Unit Tests with Coverage
        run: |
          mkdir -p coverage
          poetry run coverage run -m pytest -v tests/
        env:
          COVERAGE_FILE: coverage/.coverage.unit.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: unit.${{ runner.os }}-py${{ matrix.python-version }}

      - name: Store Unit Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-${{ matrix.python-version }}
          path: coverage
          include-hidden-files: true

  coverage-combine:
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage

      - name: Download all coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true

      - name: List Coverage Files
        run: ls -la coverage

      - name: Combine All Coverage Files And Generate The Final Report
        run: |
            coverage combine coverage/
            coverage html -d coverage/html --title "Coverage for ${{ github.sha }} (${{ github.ref }}) - Combined Unit Tests"

      - name: Store Combined Coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage/html